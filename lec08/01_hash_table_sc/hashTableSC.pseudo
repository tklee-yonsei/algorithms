// hashTableSC.pseudo - Hash Table with Separate Chaining

구조체 노드:
  키
  값
  다음노드포인터
끝

구조체 해시테이블:
  테이블크기
  테이블 (노드포인터 배열)
끝

함수 해시함수(키, 테이블크기):
  시작
    return 키 % 테이블크기
  끝

함수 새노드생성(키, 값):
  시작
    새노드 = 메모리할당(노드크기)
    새노드.키 = 키
    새노드.값 = 값
    새노드.다음노드포인터 = NULL
    return 새노드
  끝

함수 해시테이블생성(크기):
  시작
    해시테이블 = 메모리할당(해시테이블크기)
    해시테이블.테이블크기 = 크기
    해시테이블.테이블 = 메모리할당(크기 * 노드포인터크기)
    
    for i = 0 to 크기-1:
      해시테이블.테이블[i] = NULL
    
    return 해시테이블
  끝

함수 삽입(해시테이블, 키, 값):
  시작
    인덱스 = 해시함수(키, 해시테이블.테이블크기)
    현재노드 = 해시테이블.테이블[인덱스]
    
    // 기존 키가 있는지 확인 (업데이트)
    while 현재노드 != NULL:
      if 현재노드.키 == 키:
        현재노드.값 = 값
        return
      현재노드 = 현재노드.다음노드포인터
    
    // 새 노드를 리스트 앞에 삽입
    새노드 = 새노드생성(키, 값)
    새노드.다음노드포인터 = 해시테이블.테이블[인덱스]
    해시테이블.테이블[인덱스] = 새노드
  끝

함수 검색(해시테이블, 키):
  시작
    인덱스 = 해시함수(키, 해시테이블.테이블크기)
    현재노드 = 해시테이블.테이블[인덱스]
    
    while 현재노드 != NULL:
      if 현재노드.키 == 키:
        return 현재노드.값
      현재노드 = 현재노드.다음노드포인터
    
    return NULL // 키를 찾지 못함
  끝

함수 삭제(해시테이블, 키):
  시작
    인덱스 = 해시함수(키, 해시테이블.테이블크기)
    현재노드 = 해시테이블.테이블[인덱스]
    이전노드 = NULL
    
    while 현재노드 != NULL:
      if 현재노드.키 == 키:
        if 이전노드 == NULL:
          // 첫 번째 노드 삭제
          해시테이블.테이블[인덱스] = 현재노드.다음노드포인터
        else:
          // 중간 또는 마지막 노드 삭제
          이전노드.다음노드포인터 = 현재노드.다음노드포인터
        
        메모리해제(현재노드)
        return true
      
      이전노드 = 현재노드
      현재노드 = 현재노드.다음노드포인터
    
    return false // 키를 찾지 못함
  끝

함수 해시테이블출력(해시테이블):
  시작
    출력("해시 테이블 내용:")
    
    for i = 0 to 해시테이블.테이블크기-1:
      출력("버킷 ", i, ": ")
      현재노드 = 해시테이블.테이블[i]
      
      if 현재노드 == NULL:
        출력("(비어있음)")
      else:
        while 현재노드 != NULL:
          출력("[", 현재노드.키, ":", 현재노드.값, "]")
          if 현재노드.다음노드포인터 != NULL:
            출력(" -> ")
          현재노드 = 현재노드.다음노드포인터
      
      출력(줄바꿈)
  끝

함수 해시테이블해제(해시테이블):
  시작
    for i = 0 to 해시테이블.테이블크기-1:
      현재노드 = 해시테이블.테이블[i]
      while 현재노드 != NULL:
        임시노드 = 현재노드
        현재노드 = 현재노드.다음노드포인터
        메모리해제(임시노드)
    
    메모리해제(해시테이블.테이블)
    메모리해제(해시테이블)
  끝
